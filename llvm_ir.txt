declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@a = dso_local global i32 1000
define dso_local void @voidFunWith0Param() {
%1 = add i32 0, 1200
store i32 %1, i32* @a
ret void

}
define dso_local i32 @intFunWith0Param() {
%1 = add i32 0, 5
ret i32 %1

}
define dso_local i32 @intFunWith2Params(i32 %0, i32 %1) {
%3 = alloca i32
store i32 %0, i32* %3
%4 = alloca i32
store i32 %1, i32* %4
%5 = load i32, i32 * %3
%6 = load i32, i32 * %4
%7 = add i32 %5, %6
ret i32 %7

}
define dso_local void @voidFunWith2Params(i32 %0, i32 %1) {
%3 = alloca i32
store i32 %0, i32* %3
%4 = alloca i32
store i32 %1, i32* %4
ret void

}
define dso_local i32 @main() {
%1 = add i32 0, 2
%2 = alloca i32
store i32 %1, i32* %2
%3 = add i32 0, 3
%4 = alloca i32
store i32 %3, i32* %4
call void @voidFunWith0Param()
%5 =  call i32 @intFunWith0Param()
%6 = alloca i32
store i32 %5, i32* %6
%7 = load i32, i32 * %2
%8 = load i32, i32 * %4
%9 =  call i32 @intFunWith2Params(i32 %7, i32 %8)
%10 = alloca i32
store i32 %9, i32* %10
%11 = load i32, i32 * %2
%12 = load i32, i32 * %4
%13 =  call i32 @intFunWith2Params(i32 %11, i32 %12)
%14 = load i32, i32 * %2
%15 = load i32, i32 * %4
call void @voidFunWith2Params(i32 %13, i32 %14)
%16 = load i32, i32 * %10
ret i32 %16

}
