declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@a = dso_local constant i32 1
@b = dso_local constant i32 3
@c = dso_local global i32 39
define dso_local i32 @main() {
%1 = add i32 4, 0
%2 = add i32 * @c, 0
%3 = add i32 * @c, 0
%4 = add i32 4, 39
%5 = alloca i32
store i32 %4, i32* %5
%6 = add i32 * %5, 0
%7 = load i32, i32* %5
%8 = mul i32 5, %7
%9 = add i32 %8, 0
%10 = alloca i32
store i32 %9, i32* %10
%11 = add i32 * @a, 0
%12 = add i32 5, 0
%13 = add i32 5, 0
%14 = add i32 1, 5
%15 = alloca i32
store i32 %14, i32* %15
%16 = add i32 2, 0
%17 = mul i32 39, 2
%18 = add i32 %17, 0
%19 = alloca i32
store i32 %18, i32* %19
%20 = add i32 * @b, 0
%21 = add i32 * @b, 0
store i32 %21, i32* %15
%22 = add i32 20, 0
%23 = add i32 20, 0
%24 = alloca i32
store i32 %23, i32* %24
%25 = add i32 * %10, 0
%26 = add i32 20, 0
%27 = mul i32 1, 20
%28 = add i32 %27, 0
%29 = load i32, i32* %10
%30 = add i32 %29, %27
store i32 %30, i32* %10
%31 = add i32 10, 0
%32 = add i32 10, 0
%33 = alloca i32
store i32 %32, i32* %33
%34 = add i32 * %33, 0
%35 = load i32, i32* %10
%36 = load i32, i32* %33
%37 = mul i32 %35, %36
%38 = add i32 %37, 0
ret i32 %38

}
