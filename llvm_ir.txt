declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@a = dso_local global i32 1
define dso_local i32 @func() {
%1 = add i32 0, 2
store i32 %1, i32* @a
%2 = add i32 0, 1
ret i32 %2

}
define dso_local i32 @func2() {
%1 = add i32 0, 4
store i32 %1, i32* @a
%2 = add i32 0, 10
ret i32 %2

}
define dso_local i32 @func3() {
%1 = add i32 0, 3
store i32 %1, i32* @a
%2 = add i32 0, 0
ret i32 %2

}
define dso_local i32 @main() {
%1 = add i32 0, 0
%2 =  call i32 @func()
%3 =  call i32 @func3()
%4 = icmp ne i32 %2, 0
%5 = icmp ne i32 %3, 0
%6 = and i1 %4, %5
%7 = icmp ne i32 0, 0
%8 = or i1 %7, %6
%9 =  call i32 @func2()
%10 = icmp ne i32 %9, 0
%11 = or i1 %8, %10
br i1 %11,  label %12, label %14

12:
%13 = load i32, i32* @a
call void @putint(i32 %13)
call void @putch(i32 45)
call void @putch(i32 45)
call void @putch(i32 49)
br label %14

14:
%15 = add i32 0, 1
%16 = icmp ne i32 %15, 0
br i1 %16,  label %17, label %19

17:
%18 = load i32, i32* @a
call void @putint(i32 %18)
call void @putch(i32 45)
call void @putch(i32 45)
call void @putch(i32 50)
br label %19

19:
%20 = add i32 0, 0
%21 =  call i32 @func3()
%22 = icmp ne i32 0, 0
%23 = icmp ne i32 %21, 0
%24 = or i1 %22, %23
%25 =  call i32 @func()
%26 =  call i32 @func2()
%27 = icmp slt  i32 %25, %26
%28 = or i1 %24, %27
br i1 %28,  label %29, label %31

29:
%30 = load i32, i32* @a
call void @putint(i32 %30)
call void @putch(i32 45)
call void @putch(i32 45)
call void @putch(i32 51)
br label %31

31:
%32 = add i32 0, 0
ret i32 %32

}
