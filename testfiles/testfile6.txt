// CompUnit
const int const_a = 1;
const int const_b[2] = {1, 2};
const int const_c[2][2] = {{1, 2}, {3, 4}};

int global_a;
int global_b[2];
int global_c[2][2];
int hahhaha=(2+2);
// Decl
const int const_x = 1;
int var_x;

// ConstDecl
const int const_d = 1, const_e = 2;
const int const_f[2] = {1, 2}, const_g[2] = {1, 2};

// BType
int a;

// ConstDef
const int const_h = 1;
const int const_i[2] = {1, 2};
const int const_j[2][2] = {{1, 2}, {3, 4}};

// VarDecl

int c, d[2];

// VarDef
int var_a;
int var_b[2];
int var_c[2][2];

// FuncDef
int add(int a, int b) {
  return a + b;
}

void print() {

}
int func1(){
    a = a+1;
    return 1;
}


int func2(int x){
    x = x+1;
    return x;
}

void func3(){
    printf("test void no params success\n");
    return;
}

int func4(){
    printf("test no params success\n");
    return 1;
}
int func5(int x,int y){
    x = y;
    return 1;
}
int func6(int pig[][2]) {
    pig[1][1]=3;
    return 0;
}
// MainFuncDef
int main() {
   int pig[2][2]={{0,1},{1,2}};
   func6(pig);
  const int assss=2,bsss=2;
  const int kdkdk=3;
  printf("20351023");
  // Block
  {
    int x;
    const int y = 1;
  }
    func1();
  // BlockItem
  int a;
  a = 1*func2(2);
  func3();
  func4();
  func5(a,a);
  // Stmt
  int b;
  b = 2;

  a = b;

  ;

  if (1)
    b = 1;

  if (1) {
    b = 1;
  } else {
    b = 2;
  }



  // format string
  printf("%d", b);
  printf("\n");

  // LVal
  a = 0;
  global_a = 1;
  global_b[0] = 2;
  global_c[0][0] = 3;

  // PrimaryExp
  a = (b + 1);
  b = global_a;
  b = 1;

  // UnaryExp
  c = +1;
  c = -b;
  c = !b;
  c = add(a, b);

  // FuncRParams
  add(b, 1);
  add(b, global_a);
  print();

  // MulExp
  c = a * b;
  c = a / b;
  c = a % b;

  // AddExp
  c = a + b;
  c = a - b;

  // RelExp
  if(a < b)
    ;
  if(a > b)
    ;
  if(a <= b)
    ;
  if(a >= b)
    ;

  // EqExp
  if(a == b)
    ;
  if(a != b)
    ;

  // LAndExp
  if(a && b)
    ;

  // LOrExp
  if(a || b)
    ;

  // Number
  b = 1;
    { ;}
    {}
int i=0;

    for (; i < 10;  i=i+1) {
        ;
    }
    for(;;){
            break;
    }

    for(i=0;;){
        break;
    }

    for(;i<5;){
        break;
    }

    for(;;i=i+1){
        break;
    }

    for(i = 0;i<1;i = i+1){
        ;
    }
    for (i = 0; i < 10; i=i+1) {
            ;
        }

        for (i = 0; ; i=i+1) {
            if (i >= 10) break;  // 我们在循环体内手动加一个条件来退出循环
            else ;
        }
        for (i = 0; i < 10; ) {

             i=i+1;  // 手动在循环体内更新i的值
        }
        for (i = 0; ; ) {
                if (i >= 10) break;  // 我们在循环体内手动加一个条件来退出循环

                 i=i+1 ; // 手动在循环体内更新i的值
            }

        for (; ; i=i+1) {
            if (i >= 10) break;  // 我们在循环体内手动加一个条件来退出循环
            ;
        }

        i = 0;
        for (; i < 10; ) {
            ;
             i=i+1 ; // 手动在循环体内更新i的值
        }
        i = 0;
        for (; ; ) {
            if (i >= 10) break;  // 我们在循环体内手动加一个条件来退出循环
            ;
             i=i+1;  // 手动在循环体内更新i的值
        }
        i = 0;
  return 0;
}